{
  "name": "Telegram Torrent Leecher",
  "description": "A Telegram Torrent (and youtube-dl) Leecher based on Pyrogram. Powered by @MaxxBots",
  "logo": "https://telegra.ph/file/101a7d52e02772152c6e3.jpg",
  "keywords": [
    "telegram"
  ],
  "repository": "https://github.com/MaxxRider/Leech-Pro",
  "success_url": "https://t.me/MaxxBotChat",
  "website": "https://github.com/MaxxRider/Leech-Pro",
  "env": {
    "ENV": {
      "description": "Setting this to ANYTHING will enable webhooks when in env mode",
      "value": "ANYTHING"
    },
    "TELEGRAM_API": {
      "description": "Get this value from https://my.telegram.org",
      "value": ""
    },
    "TELEGRAM_HASH": {
      "description": "Get this value from https://my.telegram.org",
      "value": ""
    },
    "BOT_TOKEN": {
      "description": "get this value from @BotFather",
      "value": ""
    },
    "GDRIVE_FOLDER_ID": {
      "description": "should be an integer. The BOT API ID of the Telegram Group, where the Leecher should work., Put Group ID",
      "value": ""
    },
    "OWNER_ID": {
      "description": "should be an integer. ID of owner of bot",
      "value": ""
    },
    "DOWNLOAD_DIR": {
      "description": "True/False. If true all files will be uploaded as documents. Default is False.",
      "required": false
    },
    "DOWNLOAD_STATUS_UPDATE_INTERVAL": {
      "description": "should be an integer",
      "value": "128",
      "required": false
    },
    "AUTO_DELETE_MESSAGE_DURATION": {
      "description": "should be an integer. The port on which aria2c daemon must start, and keep listening.",
      "value": "6800",
      "required": false
    },
    "AUTO_DELETE_UPLOAD_MESSAGE_DURATION": {
      "description": "should be an integer. Number of seconds to wait before editing a message.",
      "value": "15",
      "required": false
    },
    "IS_TEAM_DRIVE": {
      "description": "should be an integer. Number of seconds to wait before cancelling a torrent.",
      "required": false
    },
    "AUTHORIZED_CHATS": {
      "description": "should be a single character.",
      "required": false
    },
    "IGNORE_PENDING_REQUESTS": {
      "description": "should be a single character.",
      "required": false
    },
    "INDEX_URL": {
      "description": "should be an URL accepting the FormParams {i}, {m}, and {t}",
      "required": false
    },
    "LEECH_ENABLED": {
      "description": "Enter your custom leech command like /leech@botname and so on. Default is /leech",
      "required": false
    },
    "LEECH_LOG": {
      "description": "For custom thumbnail Command. default is /savethumbnail",
      "required": false
    },
    "LEECH_LOG_ALT": {
      "description": "For Delete Thumbnail Command. Default is /clearthumbnail",
      "required": false
    },
    "MIRROR_LOGS": {
      "description": "Enter your index link:",
      "required": false
    },
    "LINK_LOGS": {
      "description": "Enter your custom gleech command like /gleech1@urgroupname and so on. Default is /gleech",
      "required": false
    },
    "FSUB": {
      "description": "Enter your custom tleech command like /tleech1@urgroupname and so on. Default is /tleech",
      "required": false
    },
    "FSUB_CHANNEL_ID": {
      "description": "Enter your custom ytdl command like ytdl1@urgroupname and so on. Default is /ytdl.",
      "required": false
    },
    "CHANNEL_USERNAME": {
      "description": "Enter your custom pytdl command like pytdl1@urgroupname and so on. Default is /pytdl.",
      "required": false
    },
    "TITLE_NAME": {
      "description": "Enter your custom cancel command like cancel@urgroupname and so on. Default is /cancel.",
      "required": false
    },
    "AUTHOR_NAME": {
      "description": "Enter your custom getsize command like getsize@urgroupname and so on. Default is /getsize.",
      "required": false
    },
    "AUTHOR_URL": {
      "description": "Enter your copied text from rclone config. Compulsory for /gleech as well as /tleech command ",
      "required": false
    },
    "BASE_URL_OF_BOT": {
      "description": "Enter your Cloud folder NAME(not IDðŸ˜…) in which you want to upload/store your files.",
      "required": false
    },
    "CRYPT": {
      "description": "GDTOT CRYPT",
      "required": false
    },
    "TOKEN_PICKLE_URL": {
      "description": "fill with name u want to prefix the file name like ur channel usernameðŸ™Š, keep empty for do nothing, but add to ur config vars even without input.",
      "required": false
    }
  },
  "stack": "container"
}
